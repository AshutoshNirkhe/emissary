name: website-updates
on:
  push:
    branches:
      - release/*

jobs:
  repatriate-to-lts:
    runs-on: ubuntu-latest
    name: repatriate-to-lts
    env:
      REF: ${{ github.ref }}
      RUN: ${{ github.run_id }}
      PUSH_ID: ${{ github.event.push_id }}
      WEB_REPO: ${{ secrets.WEBSITE_REPO }}
      GH_TAIL_REF: ${{ github.event.before }}
      GIT_API_KEY: ${{ secrets.GH_API_KEY }}
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      GIT_USER_NAME: ${{ secrets.GH_AUTO_USER }}
      GIT_USER_EMAIL: ${{ secrets.GH_AUTO_EMAIL }}
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Get yq
        shell: bash
        run: |
          snap install yq
      - NAME: Install git subtree
        shell: bash
        run: |
          sudo curl -fL https://raw.githubusercontent.com/LukeShu/git/lukeshu/next/2021-05-15/contrib/subtree/git-subtree.sh -o $$(git --exec-path)/git-subtree && sudo chmod 755 $$(git --exec-path)/git-subtree

      - name: Git setup
        shell: bash
        run: |
          git config --global user.email "$GIT_USER_EMAIL"
          git config --global user.name "$GIT_USER_NAME"
          git config --global "url.https://$GIT_API_KEY@github.com.insteadof" https://github.com
      - name: Get website repo
        shell: bash
        run: |
          git clone git@github.com:$WEB_REPO /tmp/getambassador.io
      - name: Get version
        shell: bash
        id: version
        run: |
          yq eval .items.0.version docs/releaseNotes.yml
      #- name: Get released item
      #  shell: bash
      #  run: |
      #    yq eval .items.0 docs/releaseNotes.yml > /tmp/item.yml
      # TODO: fix broken subtrees in docs repo and call a script to update .Y release
      - name: Temporarily block .Y releases
        shell: bash
        run: |
          [[ ! "${{jobs.version.outputs}}" ==  *.0 ]]
          [[ ! "${{jobs.version.outputs}}" == *.0-* ]]
      - name: Insert new version notes into docs repo
        shell: bash
        run: |
          set -x
          export LONG=${{jobs.version.outputs}}
          export SHORT=${LONG:0:3}
          #export ITEM=$(cat /tmp/item.yml)
          #yq eval-all '.items |= [env(ITEM)] + .' /tmp/getambassador.io/ambassador-docs/docs/edge-stack/$SHORT/releaseNotes.yml
          #yq eval-all '.items |= [env(ITEM)] + .' /tmp/getambassador.io/ambassador-docs/docs/emissary/$SHORT/releaseNotes.yml
          cp docs/releaseNotes.yml /tmp/getambassador.io/ambassador-docs/docs/edge-stack/$SHORT/releaseNotes.yml
          cp docs/releaseNotes.yml /tmp/getambassador.io/ambassador-docs/docs/emissary/$SHORT/releaseNotes.yml
          
      - name: Prerelease docs update
        shell: bash
        # according to Luke this will hit only and all pre-releases
        if: contains(jobs.version.outputs, "-")
        run: |
          #export ITEM=$(cat /tmp/item.yml)
          #yq eval-all '.items |= [env(GITEM)] + .' /tmp/getambassador.io/ambassador-docs/docs/edge-stack/pre-release/releaseNotes.yml
          #yq eval-all '.items |= [env(GITEM)] + .' /tmp/getambassador.io/ambassador-docs/docs/emissary/pre-release/releaseNotes.yml
          cp docs/releaseNotes.yml /tmp/getambassador.io/ambassador-docs/docs/edge-stack/pre-release/releaseNotes.yml
          cp docs/releaseNotes.yml /tmp/getambassador.io/ambassador-docs/docs/emissary/pre-release/releaseNotes.yml

      - name: Update website repo
        shell: bash
        run: |
          pushd /tmp/getambassador.io
          git checkout -b rel/edge-stack/v${{jobs.version.outputs}}
          git add .
          git commit -s -m "Update ambassador-docs subtree to latest following Edge Stack ${{jobs.version.outputs}} release"
          git push --set-upstream origin rel/edge-stack/v${{jobs.version.outputs}}
          echo "${GITHUB_TOKEN}" > temp_credential
          # GH does NOT want this in the env
          export GITHUB_TOKEN=
          cat temp_credential | gh auth login --with-token
          rm temp_credential
          gh pr create --title "[CI] [v${{jobs.version.outputs}}] Release Branch" \
                       --body "This PR contains updates from Edgissary release ${{jobs.version.outputs}}" \
                       --base master

      - name: Push docs
        shell: bash
        run: |
          pushd /tmp/getambassador.io
          make push-docs

      - name: Slack notification
        if: always()
        uses: edge/simple-slack-notify@master
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
        with:
          status: ${{ job.status }}
          success_text: "Created website update PR for v${{jobs.version.outputs}}"
          failure_text: "Website update PR failed"
          fields: |
            [{ "title": "Repository", "value": "${env.GITHUB_REPOSITORY}", "short": true },
             { "title": "Branch", "value": "${env.GITHUB_REF}", "short": true}]
