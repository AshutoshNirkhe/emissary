# GENERATED FILE: edits made by hand will not be preserved.
---
# Source: emissary-ingress/templates/ambassador-agent.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: emissary-ingress-agent
  namespace: default
  labels:
    app.kubernetes.io/name: emissary-ingress-agent

    app.kubernetes.io/instance: emissary-ingress
    app.kubernetes.io/part-of: emissary-ingress
    app.kubernetes.io/managed-by: getambassador.io
    product: aes
---
# Source: emissary-ingress/templates/ambassador-agent.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: emissary-ingress-agent
  labels:
    app.kubernetes.io/name: emissary-ingress-agent

    app.kubernetes.io/instance: emissary-ingress
    app.kubernetes.io/part-of: emissary-ingress
    app.kubernetes.io/managed-by: getambassador.io
    product: aes
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: emissary-ingress-agent
subjects:
- kind: ServiceAccount
  name: emissary-ingress-agent
  namespace: default
---
# Source: emissary-ingress/templates/ambassador-agent.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: emissary-ingress-agent
  labels:
    app.kubernetes.io/name: emissary-ingress-agent

    app.kubernetes.io/instance: emissary-ingress
    app.kubernetes.io/part-of: emissary-ingress
    app.kubernetes.io/managed-by: getambassador.io
    product: aes
aggregationRule:
  clusterRoleSelectors:
  - matchLabels:
      rbac.getambassador.io/role-group: emissary-ingress-agent
rules: []
---
# Source: emissary-ingress/templates/ambassador-agent.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: emissary-ingress-agent-pods
  labels:
    rbac.getambassador.io/role-group: emissary-ingress-agent
    app.kubernetes.io/name: emissary-ingress-agent

    app.kubernetes.io/instance: emissary-ingress
    app.kubernetes.io/part-of: emissary-ingress
    app.kubernetes.io/managed-by: getambassador.io
    product: aes
rules:
- apiGroups: ['']
  resources: [pods]
  verbs: [get, list, watch]
---
# Source: emissary-ingress/templates/ambassador-agent.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: emissary-ingress-agent-rollouts
  labels:
    rbac.getambassador.io/role-group: emissary-ingress-agent
    app.kubernetes.io/name: emissary-ingress-agent

    app.kubernetes.io/instance: emissary-ingress
    app.kubernetes.io/part-of: emissary-ingress
    app.kubernetes.io/managed-by: getambassador.io
    product: aes
rules:
- apiGroups: [argoproj.io]
  resources: [rollouts]
  verbs: [get, list, watch]
---
# Source: emissary-ingress/templates/ambassador-agent.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: emissary-ingress-agent-applications
  labels:
    rbac.getambassador.io/role-group: emissary-ingress-agent
    app.kubernetes.io/name: emissary-ingress-agent

    app.kubernetes.io/instance: emissary-ingress
    app.kubernetes.io/part-of: emissary-ingress
    app.kubernetes.io/managed-by: getambassador.io
    product: aes
rules:
- apiGroups: [argoproj.io]
  resources: [applications]
  verbs: [get, list, watch]
---
# Source: emissary-ingress/templates/ambassador-agent.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: emissary-ingress-agent-deployments
  labels:
    rbac.getambassador.io/role-group: emissary-ingress-agent
    app.kubernetes.io/name: emissary-ingress-agent

    app.kubernetes.io/instance: emissary-ingress
    app.kubernetes.io/part-of: emissary-ingress
    app.kubernetes.io/managed-by: getambassador.io
    product: aes
rules:
- apiGroups: [apps, extensions]
  resources: [deployments]
  verbs: [get, list, watch]
---
# Source: emissary-ingress/templates/ambassador-agent.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: emissary-ingress-agent-endpoints
  labels:
    rbac.getambassador.io/role-group: emissary-ingress-agent
    app.kubernetes.io/name: emissary-ingress-agent

    app.kubernetes.io/instance: emissary-ingress
    app.kubernetes.io/part-of: emissary-ingress
    app.kubernetes.io/managed-by: getambassador.io
    product: aes
rules:
- apiGroups: ['']
  resources: [endpoints]
  verbs: [get, list, watch]
---
# Source: emissary-ingress/templates/ambassador-agent.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: emissary-ingress-agent-configmaps
  labels:
    rbac.getambassador.io/role-group: emissary-ingress-agent
    app.kubernetes.io/name: emissary-ingress-agent

    app.kubernetes.io/instance: emissary-ingress
    app.kubernetes.io/part-of: emissary-ingress
    app.kubernetes.io/managed-by: getambassador.io
    product: aes
rules:
- apiGroups: ['']
  resources: [configmaps]
  verbs: [get, list, watch]
---
# Source: emissary-ingress/templates/ambassador-agent.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: emissary-ingress-agent-config
  namespace: default
  labels:
    app.kubernetes.io/name: emissary-ingress-agent

    app.kubernetes.io/instance: emissary-ingress
    app.kubernetes.io/part-of: emissary-ingress
    app.kubernetes.io/managed-by: getambassador.io
    product: aes
rules:
- apiGroups: ['']
  resources: [configmaps]
  verbs: [get, list, watch]
---
# Source: emissary-ingress/templates/ambassador-agent.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: emissary-ingress-agent-config
  namespace: default
  labels:
    app.kubernetes.io/name: emissary-ingress-agent

    app.kubernetes.io/instance: emissary-ingress
    app.kubernetes.io/part-of: emissary-ingress
    app.kubernetes.io/managed-by: getambassador.io
    product: aes
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: emissary-ingress-agent-config
subjects:
- kind: ServiceAccount
  name: emissary-ingress-agent
  namespace: default
---
# Source: emissary-ingress/templates/ambassador-agent.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: emissary-ingress-agent
  namespace: default
  labels:
    app.kubernetes.io/name: emissary-ingress-agent

    app.kubernetes.io/instance: emissary-ingress
    app.kubernetes.io/part-of: emissary-ingress
    app.kubernetes.io/managed-by: getambassador.io
    product: aes
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: emissary-ingress-agent
      app.kubernetes.io/instance: emissary-ingress
  template:
    metadata:
      labels:
        app.kubernetes.io/name: emissary-ingress-agent

        app.kubernetes.io/instance: emissary-ingress
        app.kubernetes.io/part-of: emissary-ingress
        app.kubernetes.io/managed-by: getambassador.io
        product: aes
    spec:
      serviceAccountName: emissary-ingress-agent
      containers:
      - name: agent
        image: $imageRepo$:$version$
        imagePullPolicy: IfNotPresent
        command: [agent]
        env:
        - name: AGENT_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: AGENT_CONFIG_RESOURCE_NAME
          value: emissary-ingress-agent-cloud-token
        - name: RPC_CONNECTION_ADDRESS
          value: https://app.getambassador.io/
        - name: AES_SNAPSHOT_URL
          value: http://emissary-ingress-admin.default:8005/snapshot-external
  progressDeadlineSeconds: 600
