{
    "id": "https://getambassador.io/schemas/authservice.json",
    "$schema": "http://json-schema.org/schema#",
    "type": "object",
    "required": [
        "apiVersion",
        "kind",
        "name",
        "auth_service"
    ],
    "properties": {
        "add_auth_headers": {
            "description": "Don't autoconvert -- we have a manual conversion.",
            "type": "object",
            "additionalProperties": {
                "type": "string"
            }
        },
        "add_linkerd_headers": {
            "type": "boolean"
        },
        "allow_request_body": {
            "type": "boolean"
        },
        "allowed_authorization_headers": {
            "type": "array",
            "items": {
                "type": "string"
            }
        },
        "allowed_request_headers": {
            "type": "array",
            "items": {
                "type": "string"
            }
        },
        "ambassador_id": {
            "description": "AmbassadorID declares which Ambassador instances should pay attention to this resource. If no value is provided, the default is: \n    ambassador_id:    - \"default\" \n TODO(lukeshu): In v3alpha2, consider renaming all of the `ambassador_id` (singular) fields to `ambassador_ids` (plural).",
            "type": "array",
            "items": {
                "type": "string"
            }
        },
        "apiVersion": {
            "enum": [
                "getambassador.io/v3alpha1"
            ]
        },
        "auth_service": {
            "type": "string"
        },
        "circuit_breakers": {
            "type": "array",
            "items": {
                "type": "object",
                "properties": {
                    "max_connections": {
                        "type": "integer"
                    },
                    "max_pending_requests": {
                        "type": "integer"
                    },
                    "max_requests": {
                        "type": "integer"
                    },
                    "max_retries": {
                        "type": "integer"
                    },
                    "priority": {
                        "type": "string",
                        "enum": [
                            "default",
                            "high"
                        ]
                    }
                }
            }
        },
        "failure_mode_allow": {
            "type": "boolean"
        },
        "generation": {
            "type": "integer"
        },
        "include_body": {
            "type": "object",
            "required": [
                "allow_partial",
                "max_bytes"
            ],
            "properties": {
                "allow_partial": {
                    "type": "boolean"
                },
                "max_bytes": {
                    "description": "These aren't pointer types because they are required.",
                    "type": "integer"
                }
            }
        },
        "kind": {
            "enum": [
                "AuthService"
            ]
        },
        "metadata_labels": {
            "type": "object",
            "additionalProperties": {
                "type": "string"
            }
        },
        "name": {
            "type": "string"
        },
        "namespace": {
            "type": "string"
        },
        "path_prefix": {
            "type": "string"
        },
        "proto": {
            "type": "string",
            "enum": [
                "http",
                "grpc"
            ]
        },
        "protocol_version": {
            "type": "string",
            "enum": [
                "v2",
                "v3"
            ]
        },
        "stats_name": {
            "type": "string"
        },
        "status_on_error": {
            "description": "TODO(lukeshu): In v3alpha2, consider getting rid of this struct type in favor of just using an int (i.e. `statusOnError: 500` instead of the current `statusOnError: { code: 500 }`).",
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer"
                }
            }
        },
        "timeout_ms": {
            "description": "TODO(lukeshu): In v3alpha2, change all of the `{foo}_ms`/`MillisecondDuration` fields to `{foo}`/`metav1.Duration`.",
            "type": "integer"
        },
        "tls": {
            "type": "string"
        }
    }
}
