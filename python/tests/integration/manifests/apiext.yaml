# GENERATED FILE: edits made by hand will not be preserved.
---
# Source: emissary-ingress/templates/apiext.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: emissary-ingress-apiext
  namespace: default
  labels:
    product: aes
    app.kubernetes.io/name: emissary-ingress-apiext
    app.kubernetes.io/part-of: kat-apiext
    app.kubernetes.io/instance: kat-apiext
---
# Source: emissary-ingress/templates/apiext.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: emissary-ingress-apiext
  labels:
    product: aes
    app.kubernetes.io/name: emissary-ingress-apiext
    app.kubernetes.io/part-of: kat-apiext
    app.kubernetes.io/instance: kat-apiext
rules:
- apiGroups: [apiextensions.k8s.io]
  resources: [customresourcedefinitions]
  verbs: [list, watch]
- apiGroups: [apiextensions.k8s.io]
  resources: [customresourcedefinitions]
  resourceNames:
  - authservices.getambassador.io
  - consulresolvers.getambassador.io
  - devportals.getambassador.io
  - hosts.getambassador.io
  - kubernetesendpointresolvers.getambassador.io
  - kubernetesserviceresolvers.getambassador.io
  - listeners.getambassador.io
  - logservices.getambassador.io
  - mappings.getambassador.io
  - modules.getambassador.io
  - ratelimitservices.getambassador.io
  - tcpmappings.getambassador.io
  - tlscontexts.getambassador.io
  - tracingservices.getambassador.io
  verbs: [update]
---
# Source: emissary-ingress/templates/apiext.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: emissary-ingress-apiext
  labels:
    product: aes
    app.kubernetes.io/name: emissary-ingress-apiext
    app.kubernetes.io/part-of: kat-apiext
    app.kubernetes.io/instance: kat-apiext
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: emissary-ingress-apiext
subjects:
- name: emissary-ingress-apiext
  namespace: default
  kind: ServiceAccount
---
# Source: emissary-ingress/templates/apiext.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: emissary-ingress-apiext
  namespace: default
  labels:
    product: aes
    app.kubernetes.io/name: emissary-ingress-apiext
    app.kubernetes.io/part-of: kat-apiext
    app.kubernetes.io/instance: kat-apiext
rules:
- apiGroups: ['']
  resources: [secrets]
  verbs: [create]
- apiGroups: ['']
  resources: [secrets]
  resourceNames: [emissary-ingress-webhook-ca]
  verbs: [get, update]
---
# Source: emissary-ingress/templates/apiext.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: emissary-ingress-apiext
  namespace: default
  labels:
    product: aes
    app.kubernetes.io/name: emissary-ingress-apiext
    app.kubernetes.io/part-of: kat-apiext
    app.kubernetes.io/instance: kat-apiext
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: emissary-ingress-apiext
subjects:
- kind: ServiceAccount
  name: emissary-ingress-apiext
  namespace: default
---
# Source: emissary-ingress/templates/apiext.yaml
apiVersion: v1
kind: Service
metadata:
  name: emissary-ingress-apiext
  namespace: default
  labels:
    product: aes
    app.kubernetes.io/name: emissary-ingress-apiext
    app.kubernetes.io/part-of: kat-apiext
    app.kubernetes.io/instance: kat-apiext
spec:
  type: ClusterIP
  ports:
  - name: https
    port: 443
    targetPort: https
  selector:
    app.kubernetes.io/name: emissary-ingress-apiext
    app.kubernetes.io/part-of: kat-apiext
    app.kubernetes.io/instance: kat-apiext
---
# Source: emissary-ingress/templates/apiext.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: emissary-ingress-apiext
  namespace: default
  labels:
    product: aes
    app.kubernetes.io/name: emissary-ingress-apiext
    app.kubernetes.io/part-of: kat-apiext
    app.kubernetes.io/instance: kat-apiext
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: emissary-ingress-apiext
      app.kubernetes.io/part-of: kat-apiext
      app.kubernetes.io/instance: kat-apiext
  replicas: 1
  template:
    metadata:
      labels:
        product: aes
        app.kubernetes.io/name: emissary-ingress-apiext
        app.kubernetes.io/part-of: kat-apiext
        app.kubernetes.io/instance: kat-apiext
    spec:
      serviceAccountName: emissary-ingress-apiext
      containers:
      - name: emissary-ingress-apiext
        image: {image}
        imagePullPolicy: IfNotPresent
        command: [apiext, emissary-ingress-apiext]
        ports:
        - name: http
          containerPort: 8080
        - name: https
          containerPort: 8443
        livenessProbe:
          httpGet:
            scheme: HTTP
            path: /probes/live
            port: 8080
          failureThreshold: 3
          initialDelaySeconds: 5
          periodSeconds: 3
